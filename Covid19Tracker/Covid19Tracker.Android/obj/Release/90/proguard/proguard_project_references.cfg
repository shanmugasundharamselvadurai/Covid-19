# ACW for Covid19Tracker.Android
# ACW for FormsViewGroup
-keep class com.xamarin.forms.platform.android.FormsViewGroup
-keepclassmembers class com.xamarin.forms.platform.android.FormsViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

-keep class com.xamarin.formsviewgroup.BuildConfig
-keepclassmembers class com.xamarin.formsviewgroup.BuildConfig {
   <init>(...);
}

# ACW for Lottie.Android
-keep class com.airbnb.lottie.LottieAnimationView
-keepclassmembers class com.airbnb.lottie.LottieAnimationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getComposition(...);
   *** setComposition(...);
   *** getDuration(...);
   *** getFrame(...);
   *** setFrame(...);
   *** hasMasks(...);
   *** hasMatte(...);
   *** getImageAssetsFolder(...);
   *** setImageAssetsFolder(...);
   *** isAnimating(...);
   *** isMergePathsEnabledForKitKatAndAbove(...);
   *** getMaxFrame(...);
   *** getMinFrame(...);
   *** getPerformanceTracker(...);
   *** getProgress(...);
   *** setProgress(...);
   *** getRepeatCount(...);
   *** setRepeatCount(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getScale(...);
   *** setScale(...);
   *** getSpeed(...);
   *** setSpeed(...);
   *** addAnimatorListener(...);
   *** addAnimatorUpdateListener(...);
   *** addLottieOnCompositionLoadedListener(...);
   *** addValueCallback(...);
   *** addValueCallback(...);
   *** cancelAnimation(...);
   *** enableMergePathsForKitKatAndAbove(...);
   *** loop(...);
   *** pauseAnimation(...);
   *** playAnimation(...);
   *** removeAllAnimatorListeners(...);
   *** removeAllLottieOnCompositionLoadedListener(...);
   *** removeAllUpdateListeners(...);
   *** removeAnimatorListener(...);
   *** removeLottieOnCompositionLoadedListener(...);
   *** removeUpdateListener(...);
   *** resolveKeyPath(...);
   *** resumeAnimation(...);
   *** reverseAnimationSpeed(...);
   *** setAnimation(...);
   *** setAnimation(...);
   *** setAnimation(...);
   *** setAnimationFromJson(...);
   *** setAnimationFromJson(...);
   *** setAnimationFromUrl(...);
   *** setFontAssetDelegate(...);
   *** setImageAssetDelegate(...);
   *** setMaxFrame(...);
   *** setMaxFrame(...);
   *** setMaxProgress(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxProgress(...);
   *** setMinFrame(...);
   *** setMinFrame(...);
   *** setMinProgress(...);
   *** setPerformanceTrackingEnabled(...);
   *** setRenderMode(...);
   *** setTextDelegate(...);
   *** updateBitmap(...);
}

-keep class com.airbnb.lottie.LottieComposition$Factory
-keepclassmembers class com.airbnb.lottie.LottieComposition$Factory {
   *** fromAssetFileName(...);
   *** fromFileSync(...);
   *** fromInputStream(...);
   *** fromInputStreamSync(...);
   *** fromInputStreamSync(...);
   *** fromJsonReader(...);
   *** fromJsonString(...);
   *** fromJsonSync(...);
   *** fromJsonSync(...);
   *** fromJsonSync(...);
   *** fromRawFile(...);
}

-keep class com.airbnb.lottie.LottieComposition
-keepclassmembers class com.airbnb.lottie.LottieComposition {
   <init>(...);
   *** getBounds(...);
   *** getCharacters(...);
   *** getDuration(...);
   *** getDurationFrames(...);
   *** getEndFrame(...);
   *** getFonts(...);
   *** getFrameRate(...);
   *** hasDashPattern(...);
   *** setHasDashPattern(...);
   *** hasImages(...);
   *** getImages(...);
   *** getLayers(...);
   *** getMarkers(...);
   *** getMaskAndMatteCount(...);
   *** getPerformanceTracker(...);
   *** getStartFrame(...);
   *** getWarnings(...);
   *** addWarning(...);
   *** getMarker(...);
   *** getPrecomps(...);
   *** incrementMatteOrMaskCount(...);
   *** init(...);
   *** layerModelForId(...);
   *** setPerformanceTrackingEnabled(...);
}

-keep class com.airbnb.lottie.FontAssetDelegate
-keepclassmembers class com.airbnb.lottie.FontAssetDelegate {
   <init>(...);
   *** fetchFont(...);
   *** getFontPath(...);
}

-keep class com.airbnb.lottie.Cancellable
-keepclassmembers class com.airbnb.lottie.Cancellable {
}

-keep class com.airbnb.lottie.ImageAssetDelegate
-keepclassmembers class com.airbnb.lottie.ImageAssetDelegate {
}

-keep class com.airbnb.lottie.LottieListener
-keepclassmembers class com.airbnb.lottie.LottieListener {
}

-keep class mono.com.airbnb.lottie.LottieListenerImplementor
-keepclassmembers class mono.com.airbnb.lottie.LottieListenerImplementor {
}

-keep class com.airbnb.lottie.LottieLogger
-keepclassmembers class com.airbnb.lottie.LottieLogger {
}

-keep class com.airbnb.lottie.LottieOnCompositionLoadedListener
-keepclassmembers class com.airbnb.lottie.LottieOnCompositionLoadedListener {
}

-keep class mono.com.airbnb.lottie.LottieOnCompositionLoadedListenerImplementor
-keepclassmembers class mono.com.airbnb.lottie.LottieOnCompositionLoadedListenerImplementor {
}

-keep class com.airbnb.lottie.LottieProperty
-keepclassmembers class com.airbnb.lottie.LottieProperty {
}

-keep class com.airbnb.lottie.LottieProperty
-keepclassmembers class com.airbnb.lottie.LottieProperty {
}

-keep class com.airbnb.lottie.OnCompositionLoadedListener
-keepclassmembers class com.airbnb.lottie.OnCompositionLoadedListener {
}

-keep class mono.com.airbnb.lottie.OnCompositionLoadedListenerImplementor
-keepclassmembers class mono.com.airbnb.lottie.OnCompositionLoadedListenerImplementor {
}

-keep class com.airbnb.lottie.LottieCompositionFactory
-keepclassmembers class com.airbnb.lottie.LottieCompositionFactory {
   *** fromAsset(...);
   *** fromAssetSync(...);
   *** fromJson(...);
   *** fromJsonInputStream(...);
   *** fromJsonInputStreamSync(...);
   *** fromJsonReader(...);
   *** fromJsonReaderSync(...);
   *** fromJsonString(...);
   *** fromJsonStringSync(...);
   *** fromJsonSync(...);
   *** fromRawRes(...);
   *** fromRawResSync(...);
   *** fromUrl(...);
   *** fromUrlSync(...);
   *** fromZipStream(...);
   *** fromZipStreamSync(...);
   *** setMaxCacheSize(...);
}

-keep class com.airbnb.lottie.LottieDrawable$RepeatMode
-keepclassmembers class com.airbnb.lottie.LottieDrawable$RepeatMode {
}

-keep class com.airbnb.lottie.LottieDrawable
-keepclassmembers class com.airbnb.lottie.LottieDrawable {
   <init>(...);
   *** getComposition(...);
   *** getFrame(...);
   *** setFrame(...);
   *** hasMasks(...);
   *** hasMatte(...);
   *** getImageAssetsFolder(...);
   *** isAnimating(...);
   *** isLooping(...);
   *** isMergePathsEnabledForKitKatAndAbove(...);
   *** isRunning(...);
   *** getMaxFrame(...);
   *** getMinFrame(...);
   *** getOpacity(...);
   *** getPerformanceTracker(...);
   *** getProgress(...);
   *** setProgress(...);
   *** getRepeatCount(...);
   *** setRepeatCount(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getScale(...);
   *** setScale(...);
   *** getSpeed(...);
   *** setSpeed(...);
   *** getTextDelegate(...);
   *** setTextDelegate(...);
   *** addAnimatorListener(...);
   *** addAnimatorUpdateListener(...);
   *** addValueCallback(...);
   *** addValueCallback(...);
   *** cancelAnimation(...);
   *** clearComposition(...);
   *** draw(...);
   *** enableMergePathsForKitKatAndAbove(...);
   *** enableMergePathsForKitKatAndAbove(...);
   *** endAnimation(...);
   *** getImageAsset(...);
   *** getTypeface(...);
   *** invalidateDrawable(...);
   *** loop(...);
   *** pauseAnimation(...);
   *** playAnimation(...);
   *** removeAllAnimatorListeners(...);
   *** removeAllUpdateListeners(...);
   *** removeAnimatorListener(...);
   *** removeAnimatorUpdateListener(...);
   *** resolveKeyPath(...);
   *** resumeAnimation(...);
   *** reverseAnimationSpeed(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setComposition(...);
   *** setFontAssetDelegate(...);
   *** setImageAssetDelegate(...);
   *** setImagesAssetsFolder(...);
   *** setMaxFrame(...);
   *** setMaxFrame(...);
   *** setMaxProgress(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxProgress(...);
   *** setMinFrame(...);
   *** setMinFrame(...);
   *** setMinProgress(...);
   *** setPerformanceTrackingEnabled(...);
   *** start(...);
   *** stop(...);
   *** unscheduleDrawable(...);
   *** updateBitmap(...);
   *** useTextGlyphs(...);
}

-keep class com.airbnb.lottie.LottieImageAsset
-keepclassmembers class com.airbnb.lottie.LottieImageAsset {
   <init>(...);
   *** getBitmap(...);
   *** setBitmap(...);
   *** getDirName(...);
   *** getFileName(...);
   *** getHeight(...);
   *** getId(...);
   *** getWidth(...);
}

-keep class com.airbnb.lottie.LottieResult
-keepclassmembers class com.airbnb.lottie.LottieResult {
   <init>(...);
   <init>(...);
   *** getException(...);
   *** getValue(...);
}

-keep class com.airbnb.lottie.LottieTask
-keepclassmembers class com.airbnb.lottie.LottieTask {
   <init>(...);
   *** addFailureListener(...);
   *** addListener(...);
   *** removeFailureListener(...);
   *** removeListener(...);
}

-keep class com.airbnb.lottie.PerformanceTracker$FrameListener
-keepclassmembers class com.airbnb.lottie.PerformanceTracker$FrameListener {
}

-keep class mono.com.airbnb.lottie.PerformanceTracker_FrameListenerImplementor
-keepclassmembers class mono.com.airbnb.lottie.PerformanceTracker_FrameListenerImplementor {
}

-keep class com.airbnb.lottie.PerformanceTracker
-keepclassmembers class com.airbnb.lottie.PerformanceTracker {
   <init>(...);
   *** getSortedRenderTimes(...);
   *** addFrameListener(...);
   *** clearRenderTimes(...);
   *** logRenderTimes(...);
   *** recordRenderTime(...);
   *** removeFrameListener(...);
}

-keep class com.airbnb.lottie.RenderMode
-keepclassmembers class com.airbnb.lottie.RenderMode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.SimpleColorFilter
-keepclassmembers class com.airbnb.lottie.SimpleColorFilter {
   <init>(...);
}

-keep class com.airbnb.lottie.TextDelegate
-keepclassmembers class com.airbnb.lottie.TextDelegate {
   <init>(...);
   <init>(...);
   *** getTextInternal(...);
   *** invalidateAllText(...);
   *** invalidateText(...);
   *** setCacheText(...);
   *** setText(...);
}

-keep class com.airbnb.lottie.value.SimpleLottieValueCallback
-keepclassmembers class com.airbnb.lottie.value.SimpleLottieValueCallback {
}

-keep class com.airbnb.lottie.value.Keyframe
-keepclassmembers class com.airbnb.lottie.value.Keyframe {
   <init>(...);
   <init>(...);
   *** getEndProgress(...);
   *** getEndValueFloat(...);
   *** getEndValueInt(...);
   *** isStatic(...);
   *** getStartProgress(...);
   *** getStartValueFloat(...);
   *** getStartValueInt(...);
   *** containsProgress(...);
}

-keep class com.airbnb.lottie.value.LottieFrameInfo
-keepclassmembers class com.airbnb.lottie.value.LottieFrameInfo {
   <init>(...);
   *** getEndFrame(...);
   *** getEndValue(...);
   *** getInterpolatedKeyframeProgress(...);
   *** getLinearKeyframeProgress(...);
   *** getOverallProgress(...);
   *** getStartFrame(...);
   *** getStartValue(...);
   *** set(...);
}

-keep class com.airbnb.lottie.value.LottieInterpolatedFloatValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedFloatValue {
   <init>(...);
   <init>(...);
}

-keep class com.airbnb.lottie.value.LottieInterpolatedIntegerValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedIntegerValue {
   <init>(...);
   <init>(...);
}

-keep class com.airbnb.lottie.value.LottieInterpolatedPointValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedPointValue {
   <init>(...);
   <init>(...);
}

-keep class com.airbnb.lottie.value.LottieInterpolatedValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedValue {
}

-keep class com.airbnb.lottie.value.LottieInterpolatedValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedValue {
}

-keep class com.airbnb.lottie.value.LottieRelativeFloatValueCallback
-keepclassmembers class com.airbnb.lottie.value.LottieRelativeFloatValueCallback {
   <init>(...);
   <init>(...);
   *** getOffset(...);
   *** getValue(...);
}

-keep class com.airbnb.lottie.value.LottieRelativeIntegerValueCallback
-keepclassmembers class com.airbnb.lottie.value.LottieRelativeIntegerValueCallback {
   <init>(...);
   *** getOffset(...);
   *** getValue(...);
}

-keep class com.airbnb.lottie.value.LottieRelativePointValueCallback
-keepclassmembers class com.airbnb.lottie.value.LottieRelativePointValueCallback {
   <init>(...);
   <init>(...);
   *** getOffset(...);
   *** getValue(...);
}

-keep class com.airbnb.lottie.value.LottieValueCallback
-keepclassmembers class com.airbnb.lottie.value.LottieValueCallback {
   <init>(...);
   <init>(...);
   *** getValue(...);
   *** getValueInternal(...);
   *** setValue(...);
}

-keep class com.airbnb.lottie.value.ScaleXY
-keepclassmembers class com.airbnb.lottie.value.ScaleXY {
   <init>(...);
   <init>(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** equals(...);
   *** set(...);
}

-keep class com.airbnb.lottie.utils.BaseLottieAnimator
-keepclassmembers class com.airbnb.lottie.utils.BaseLottieAnimator {
   <init>(...);
}

-keep class com.airbnb.lottie.utils.BaseLottieAnimator
-keepclassmembers class com.airbnb.lottie.utils.BaseLottieAnimator {
}

-keep class com.airbnb.lottie.utils.GammaEvaluator
-keepclassmembers class com.airbnb.lottie.utils.GammaEvaluator {
   <init>(...);
   *** evaluate(...);
}

-keep class com.airbnb.lottie.utils.LogcatLogger
-keepclassmembers class com.airbnb.lottie.utils.LogcatLogger {
   <init>(...);
   *** debug(...);
   *** debug(...);
   *** warning(...);
   *** warning(...);
}

-keep class com.airbnb.lottie.utils.Logger
-keepclassmembers class com.airbnb.lottie.utils.Logger {
   <init>(...);
   *** debug(...);
   *** debug(...);
   *** setInstance(...);
   *** warning(...);
   *** warning(...);
}

-keep class com.airbnb.lottie.utils.LottieValueAnimator
-keepclassmembers class com.airbnb.lottie.utils.LottieValueAnimator {
   <init>(...);
   *** getAnimatedValueAbsolute(...);
   *** getFrame(...);
   *** getMaxFrame(...);
   *** setMaxFrame(...);
   *** getMinFrame(...);
   *** getSpeed(...);
   *** setSpeed(...);
   *** clearComposition(...);
   *** doFrame(...);
   *** endAnimation(...);
   *** pauseAnimation(...);
   *** playAnimation(...);
   *** postFrameCallback(...);
   *** removeFrameCallback(...);
   *** removeFrameCallback(...);
   *** resumeAnimation(...);
   *** reverseAnimationSpeed(...);
   *** setComposition(...);
   *** setFrame(...);
   *** setMinAndMaxFrames(...);
   *** setMinFrame(...);
}

-keep class com.airbnb.lottie.utils.MeanCalculator
-keepclassmembers class com.airbnb.lottie.utils.MeanCalculator {
   <init>(...);
   *** getMean(...);
   *** add(...);
}

-keep class com.airbnb.lottie.utils.MiscUtils
-keepclassmembers class com.airbnb.lottie.utils.MiscUtils {
   <init>(...);
   *** addPoints(...);
   *** clamp(...);
   *** clamp(...);
   *** contains(...);
   *** getPathFromData(...);
   *** lerp(...);
   *** lerp(...);
   *** lerp(...);
   *** resolveKeyPath(...);
}

-keep class com.airbnb.lottie.utils.Utils
-keepclassmembers class com.airbnb.lottie.utils.Utils {
   *** applyTrimPathIfNeeded(...);
   *** applyTrimPathIfNeeded(...);
   *** closeQuietly(...);
   *** createPath(...);
   *** dpScale(...);
   *** getAnimationScale(...);
   *** getScale(...);
   *** hasZeroScaleAxis(...);
   *** hashFor(...);
   *** isAtLeastVersion(...);
   *** renderPath(...);
   *** resizeBitmapIfNeeded(...);
}

-keep class com.airbnb.lottie.network.FileExtension
-keepclassmembers class com.airbnb.lottie.network.FileExtension {
   *** forFile(...);
   *** tempExtension(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.network.NetworkFetcher
-keepclassmembers class com.airbnb.lottie.network.NetworkFetcher {
   *** fetchSync(...);
   *** fetchSync(...);
}

-keep class com.airbnb.lottie.model.CubicCurveData
-keepclassmembers class com.airbnb.lottie.model.CubicCurveData {
   <init>(...);
   <init>(...);
   *** getControlPoint1(...);
   *** getControlPoint2(...);
   *** getVertex(...);
   *** setControlPoint1(...);
   *** setControlPoint2(...);
   *** setVertex(...);
}

-keep class com.airbnb.lottie.model.DocumentData$Justification
-keepclassmembers class com.airbnb.lottie.model.DocumentData$Justification {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.DocumentData
-keepclassmembers class com.airbnb.lottie.model.DocumentData {
   <init>(...);
}

-keep class com.airbnb.lottie.model.Font
-keepclassmembers class com.airbnb.lottie.model.Font {
   <init>(...);
   *** getFamily(...);
   *** getName(...);
   *** getStyle(...);
}

-keep class com.airbnb.lottie.model.FontCharacter
-keepclassmembers class com.airbnb.lottie.model.FontCharacter {
   <init>(...);
   *** getShapes(...);
   *** getWidth(...);
   *** hashFor(...);
}

-keep class com.airbnb.lottie.model.KeyPathElement
-keepclassmembers class com.airbnb.lottie.model.KeyPathElement {
}

-keep class com.airbnb.lottie.model.KeyPath
-keepclassmembers class com.airbnb.lottie.model.KeyPath {
   <init>(...);
   *** getResolvedElement(...);
   *** addKey(...);
   *** fullyResolvesTo(...);
   *** incrementDepthBy(...);
   *** keysToString(...);
   *** matches(...);
   *** propagateToChildren(...);
   *** resolve(...);
}

-keep class com.airbnb.lottie.model.LottieCompositionCache
-keepclassmembers class com.airbnb.lottie.model.LottieCompositionCache {
   *** getInstance(...);
   *** clear(...);
   *** get(...);
   *** put(...);
   *** resize(...);
}

-keep class com.airbnb.lottie.model.Marker
-keepclassmembers class com.airbnb.lottie.model.Marker {
   <init>(...);
   *** matchesName(...);
}

-keep class com.airbnb.lottie.model.MutablePair
-keepclassmembers class com.airbnb.lottie.model.MutablePair {
   <init>(...);
   *** set(...);
}

-keep class com.airbnb.lottie.model.layer.BaseLayer
-keepclassmembers class com.airbnb.lottie.model.layer.BaseLayer {
   *** getName(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.model.layer.BaseLayer
-keepclassmembers class com.airbnb.lottie.model.layer.BaseLayer {
}

-keep class com.airbnb.lottie.model.layer.CompositionLayer
-keepclassmembers class com.airbnb.lottie.model.layer.CompositionLayer {
   <init>(...);
   *** hasMasks(...);
   *** hasMatte(...);
   *** resolveChildKeyPath(...);
   *** setProgress(...);
}

-keep class com.airbnb.lottie.model.layer.ImageLayer
-keepclassmembers class com.airbnb.lottie.model.layer.ImageLayer {
   *** drawLayer(...);
}

-keep class com.airbnb.lottie.model.layer.Layer$LayerType
-keepclassmembers class com.airbnb.lottie.model.layer.Layer$LayerType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.layer.Layer$MatteType
-keepclassmembers class com.airbnb.lottie.model.layer.Layer$MatteType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.layer.Layer
-keepclassmembers class com.airbnb.lottie.model.layer.Layer {
   *** getId(...);
   *** isHidden(...);
   *** getLayerType(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.layer.NullLayer
-keepclassmembers class com.airbnb.lottie.model.layer.NullLayer {
}

-keep class com.airbnb.lottie.model.layer.ShapeLayer
-keepclassmembers class com.airbnb.lottie.model.layer.ShapeLayer {
   *** resolveChildKeyPath(...);
}

-keep class com.airbnb.lottie.model.layer.SolidLayer
-keepclassmembers class com.airbnb.lottie.model.layer.SolidLayer {
   *** drawLayer(...);
}

-keep class com.airbnb.lottie.model.layer.TextLayer
-keepclassmembers class com.airbnb.lottie.model.layer.TextLayer {
}

-keep class com.airbnb.lottie.model.content.CircleShape
-keepclassmembers class com.airbnb.lottie.model.content.CircleShape {
   *** isHidden(...);
   *** isReversed(...);
   *** getName(...);
   *** getSize(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.GradientColor
-keepclassmembers class com.airbnb.lottie.model.content.GradientColor {
   <init>(...);
   *** getSize(...);
   *** getColors(...);
   *** getPositions(...);
   *** lerp(...);
}

-keep class com.airbnb.lottie.model.content.GradientFill
-keepclassmembers class com.airbnb.lottie.model.content.GradientFill {
   <init>(...);
   *** getEndPoint(...);
   *** getFillType(...);
   *** getGradientColor(...);
   *** getGradientType(...);
   *** isHidden(...);
   *** getName(...);
   *** getOpacity(...);
   *** getStartPoint(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.GradientStroke
-keepclassmembers class com.airbnb.lottie.model.content.GradientStroke {
   <init>(...);
   *** getCapType(...);
   *** getDashOffset(...);
   *** getEndPoint(...);
   *** getGradientColor(...);
   *** getGradientType(...);
   *** isHidden(...);
   *** getJoinType(...);
   *** getLineDashPattern(...);
   *** getMiterLimit(...);
   *** getName(...);
   *** getOpacity(...);
   *** getStartPoint(...);
   *** getWidth(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.GradientType
-keepclassmembers class com.airbnb.lottie.model.content.GradientType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.ContentModel
-keepclassmembers class com.airbnb.lottie.model.content.ContentModel {
}

-keep class com.airbnb.lottie.model.content.Mask$MaskMode
-keepclassmembers class com.airbnb.lottie.model.content.Mask$MaskMode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.Mask
-keepclassmembers class com.airbnb.lottie.model.content.Mask {
   <init>(...);
   *** isInverted(...);
   *** getMaskPath(...);
   *** getOpacity(...);
   *** getMaskMode(...);
}

-keep class com.airbnb.lottie.model.content.MergePaths$MergePathsMode
-keepclassmembers class com.airbnb.lottie.model.content.MergePaths$MergePathsMode {
   *** forId(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.MergePaths
-keepclassmembers class com.airbnb.lottie.model.content.MergePaths {
   <init>(...);
   *** isHidden(...);
   *** getMode(...);
   *** getName(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.PolystarShape$Type
-keepclassmembers class com.airbnb.lottie.model.content.PolystarShape$Type {
   *** forValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.PolystarShape
-keepclassmembers class com.airbnb.lottie.model.content.PolystarShape {
   *** getInnerRadius(...);
   *** getInnerRoundedness(...);
   *** isHidden(...);
   *** getName(...);
   *** getOuterRadius(...);
   *** getOuterRoundedness(...);
   *** getPoints(...);
   *** getRotation(...);
   *** getType(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.RectangleShape
-keepclassmembers class com.airbnb.lottie.model.content.RectangleShape {
   *** getCornerRadius(...);
   *** isHidden(...);
   *** getName(...);
   *** getSize(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.Repeater
-keepclassmembers class com.airbnb.lottie.model.content.Repeater {
   <init>(...);
   *** getCopies(...);
   *** isHidden(...);
   *** getName(...);
   *** getOffset(...);
   *** getTransform(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapeData
-keepclassmembers class com.airbnb.lottie.model.content.ShapeData {
   <init>(...);
   <init>(...);
   *** getCurves(...);
   *** getInitialPoint(...);
   *** isClosed(...);
   *** interpolateBetween(...);
}

-keep class com.airbnb.lottie.model.content.ShapeFill
-keepclassmembers class com.airbnb.lottie.model.content.ShapeFill {
   <init>(...);
   *** getColor(...);
   *** getFillType(...);
   *** isHidden(...);
   *** getName(...);
   *** getOpacity(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapeGroup
-keepclassmembers class com.airbnb.lottie.model.content.ShapeGroup {
   <init>(...);
   *** isHidden(...);
   *** getItems(...);
   *** getName(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapePath
-keepclassmembers class com.airbnb.lottie.model.content.ShapePath {
   <init>(...);
   *** isHidden(...);
   *** getName(...);
   *** getShapePath(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapeStroke$LineCapType
-keepclassmembers class com.airbnb.lottie.model.content.ShapeStroke$LineCapType {
   *** toPaintCap(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.ShapeStroke$LineJoinType
-keepclassmembers class com.airbnb.lottie.model.content.ShapeStroke$LineJoinType {
   *** toPaintJoin(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.ShapeStroke
-keepclassmembers class com.airbnb.lottie.model.content.ShapeStroke {
   <init>(...);
   *** getCapType(...);
   *** getColor(...);
   *** getDashOffset(...);
   *** isHidden(...);
   *** getJoinType(...);
   *** getLineDashPattern(...);
   *** getMiterLimit(...);
   *** getName(...);
   *** getOpacity(...);
   *** getWidth(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapeTrimPath$Type
-keepclassmembers class com.airbnb.lottie.model.content.ShapeTrimPath$Type {
   *** forId(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.ShapeTrimPath
-keepclassmembers class com.airbnb.lottie.model.content.ShapeTrimPath {
   <init>(...);
   *** getEnd(...);
   *** isHidden(...);
   *** getName(...);
   *** getOffset(...);
   *** getStart(...);
   *** getType(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableColorValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableColorValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableFloatValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableFloatValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableGradientColorValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableGradientColorValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableIntegerValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableIntegerValue {
   <init>(...);
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatablePathValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatablePathValue {
   <init>(...);
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatablePointValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatablePointValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableScaleValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableScaleValue {
   <init>(...);
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableShapeValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableShapeValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableTextFrame
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableTextFrame {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableTextProperties
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableTextProperties {
   <init>(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableTransform
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableTransform {
   <init>(...);
   *** getAnchorPoint(...);
   *** getEndOpacity(...);
   *** getOpacity(...);
   *** getRotation(...);
   *** getScale(...);
   *** getSkew(...);
   *** getSkewAngle(...);
   *** getStartOpacity(...);
   *** createAnimation(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.animatable.BaseAnimatableValue
-keepclassmembers class com.airbnb.lottie.model.animatable.BaseAnimatableValue {
   *** isStatic(...);
   *** getKeyframes(...);
}

-keep class com.airbnb.lottie.model.animatable.BaseAnimatableValue
-keepclassmembers class com.airbnb.lottie.model.animatable.BaseAnimatableValue {
}

-keep class com.airbnb.lottie.manager.FontAssetManager
-keepclassmembers class com.airbnb.lottie.manager.FontAssetManager {
   <init>(...);
   *** getTypeface(...);
   *** setDefaultFontFileExtension(...);
   *** setDelegate(...);
}

-keep class com.airbnb.lottie.manager.ImageAssetManager
-keepclassmembers class com.airbnb.lottie.manager.ImageAssetManager {
   <init>(...);
   *** bitmapForId(...);
   *** hasSameContext(...);
   *** setDelegate(...);
   *** updateBitmap(...);
}

-keep class com.airbnb.lottie.animation.LPaint
-keepclassmembers class com.airbnb.lottie.animation.LPaint {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation
-keepclassmembers class com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation {
   <init>(...);
   *** getMasks(...);
}

-keep class com.airbnb.lottie.animation.keyframe.PathKeyframe
-keepclassmembers class com.airbnb.lottie.animation.keyframe.PathKeyframe {
   <init>(...);
   *** createPath(...);
}

-keep class com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation
-keepclassmembers class com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation {
   <init>(...);
   *** getMatrix(...);
   *** addAnimationsToLayer(...);
   *** applyValueCallback(...);
   *** getMatrixForRepeater(...);
   *** setProgress(...);
}

-keep class com.airbnb.lottie.animation.content.BaseStrokeContent
-keepclassmembers class com.airbnb.lottie.animation.content.BaseStrokeContent {
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
   *** getName(...);
}

-keep class com.airbnb.lottie.animation.content.BaseStrokeContent
-keepclassmembers class com.airbnb.lottie.animation.content.BaseStrokeContent {
   *** getName(...);
}

-keep class com.airbnb.lottie.animation.content.CompoundTrimPathContent
-keepclassmembers class com.airbnb.lottie.animation.content.CompoundTrimPathContent {
   <init>(...);
   *** apply(...);
}

-keep class com.airbnb.lottie.animation.content.ContentGroup
-keepclassmembers class com.airbnb.lottie.animation.content.ContentGroup {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.EllipseContent
-keepclassmembers class com.airbnb.lottie.animation.content.EllipseContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** addValueCallback(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.FillContent
-keepclassmembers class com.airbnb.lottie.animation.content.FillContent {
   <init>(...);
   *** getName(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.GradientFillContent
-keepclassmembers class com.airbnb.lottie.animation.content.GradientFillContent {
   <init>(...);
   *** getName(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.GradientStrokeContent
-keepclassmembers class com.airbnb.lottie.animation.content.GradientStrokeContent {
   <init>(...);
   *** getName(...);
}

-keep class com.airbnb.lottie.animation.content.Content
-keepclassmembers class com.airbnb.lottie.animation.content.Content {
}

-keep class com.airbnb.lottie.animation.content.DrawingContent
-keepclassmembers class com.airbnb.lottie.animation.content.DrawingContent {
}

-keep class com.airbnb.lottie.animation.content.KeyPathElementContent
-keepclassmembers class com.airbnb.lottie.animation.content.KeyPathElementContent {
}

-keep class com.airbnb.lottie.animation.content.ModifierContent
-keepclassmembers class com.airbnb.lottie.animation.content.ModifierContent {
}

-keep class com.airbnb.lottie.animation.content.MergePathsContent
-keepclassmembers class com.airbnb.lottie.animation.content.MergePathsContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** absorbContent(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.PolystarContent
-keepclassmembers class com.airbnb.lottie.animation.content.PolystarContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** addValueCallback(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.RectangleContent
-keepclassmembers class com.airbnb.lottie.animation.content.RectangleContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** addValueCallback(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.RepeaterContent
-keepclassmembers class com.airbnb.lottie.animation.content.RepeaterContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** absorbContent(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.ShapeContent
-keepclassmembers class com.airbnb.lottie.animation.content.ShapeContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** onValueChanged(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.StrokeContent
-keepclassmembers class com.airbnb.lottie.animation.content.StrokeContent {
   <init>(...);
   *** getName(...);
}

-keep class com.airbnb.lottie.animation.content.TrimPathContent
-keepclassmembers class com.airbnb.lottie.animation.content.TrimPathContent {
   <init>(...);
   *** isHidden(...);
   *** getName(...);
   *** onValueChanged(...);
   *** setContents(...);
}

# ACW for Lottie.Forms
# ACW for Rg.Plugins.Popup.Droid
# ACW for Syncfusion.Core.XForms.Android
# ACW for Syncfusion.SfMaps.Android
# ACW for Syncfusion.SfMaps.XForms.Android
# ACW for Xamarin.Android.Arch.Core.Common
# ACW for Xamarin.Android.Arch.Core.Runtime
# ACW for Xamarin.Android.Arch.Lifecycle.Common
-keep class android.arch.lifecycle.Lifecycle$State
-keepclassmembers class android.arch.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class android.arch.lifecycle.LifecycleObserver
-keepclassmembers class android.arch.lifecycle.LifecycleObserver {
}

-keep class android.arch.lifecycle.LifecycleOwner
-keepclassmembers class android.arch.lifecycle.LifecycleOwner {
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData.Core
-keep class android.arch.lifecycle.Observer
-keepclassmembers class android.arch.lifecycle.Observer {
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData
# ACW for Xamarin.Android.Arch.Lifecycle.Runtime
# ACW for Xamarin.Android.Arch.Lifecycle.ViewModel
-keep class android.arch.lifecycle.ViewModelStoreOwner
-keepclassmembers class android.arch.lifecycle.ViewModelStoreOwner {
}

-keep class android.arch.lifecycle.ViewModelStore
-keepclassmembers class android.arch.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.Android.Support.Animated.Vector.Drawable
# ACW for Xamarin.Android.Support.Annotations
# ACW for Xamarin.Android.Support.AsyncLayoutInflater
# ACW for Xamarin.Android.Support.Collections
-keep class android.support.v4.util.SparseArrayCompat
-keepclassmembers class android.support.v4.util.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.Android.Support.Compat
-keep class android.support.v13.view.DragAndDropPermissionsCompat
-keepclassmembers class android.support.v13.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class android.support.v4.widget.CompoundButtonCompat
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class android.support.v4.widget.AutoSizeableTextView
-keepclassmembers class android.support.v4.widget.AutoSizeableTextView {
}

-keep class android.support.v4.widget.TintableCompoundButton
-keepclassmembers class android.support.v4.widget.TintableCompoundButton {
}

-keep class android.support.v4.widget.TintableImageSourceView
-keepclassmembers class android.support.v4.widget.TintableImageSourceView {
}

-keep class android.support.v4.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class android.support.v4.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.android.support.v4.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class android.support.v4.widget.NestedScrollView
-keepclassmembers class android.support.v4.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.widget.TextViewCompat
-keepclassmembers class android.support.v4.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class android.support.v4.view.AccessibilityDelegateCompat
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat {
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class android.support.v4.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider$VisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$VisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class android.support.v4.view.DisplayCutoutCompat
-keepclassmembers class android.support.v4.view.DisplayCutoutCompat {
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
}

-keep class android.support.v4.view.NestedScrollingChild
-keepclassmembers class android.support.v4.view.NestedScrollingChild {
}

-keep class android.support.v4.view.NestedScrollingChild2
-keepclassmembers class android.support.v4.view.NestedScrollingChild2 {
}

-keep class android.support.v4.view.NestedScrollingParent
-keepclassmembers class android.support.v4.view.NestedScrollingParent {
}

-keep class android.support.v4.view.NestedScrollingParent2
-keepclassmembers class android.support.v4.view.NestedScrollingParent2 {
}

-keep class android.support.v4.view.OnApplyWindowInsetsListener
-keepclassmembers class android.support.v4.view.OnApplyWindowInsetsListener {
}

-keep class android.support.v4.view.ScrollingView
-keepclassmembers class android.support.v4.view.ScrollingView {
}

-keep class android.support.v4.view.TintableBackgroundView
-keepclassmembers class android.support.v4.view.TintableBackgroundView {
}

-keep class android.support.v4.view.ViewPropertyAnimatorListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListener {
}

-keep class android.support.v4.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorUpdateListener {
}

-keep class android.support.v4.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class android.support.v4.view.MenuItemCompat$OnActionExpandListener {
}

-keep class android.support.v4.view.MenuItemCompat
-keepclassmembers class android.support.v4.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class android.support.v4.view.PointerIconCompat
-keepclassmembers class android.support.v4.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class android.support.v4.view.ScaleGestureDetectorCompat
-keepclassmembers class android.support.v4.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class android.support.v4.view.ViewCompat
-keepclassmembers class android.support.v4.view.ViewCompat {
   <init>(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** generateViewId(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityLiveRegion(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class android.support.v4.view.WindowInsetsCompat
-keepclassmembers class android.support.v4.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getText(...);
   *** setText(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class android.support.v4.util.Pair
-keepclassmembers class android.support.v4.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class android.support.v4.internal.view.SupportMenu
-keepclassmembers class android.support.v4.internal.view.SupportMenu {
}

-keep class android.support.v4.internal.view.SupportMenuItem
-keepclassmembers class android.support.v4.internal.view.SupportMenuItem {
}

-keep class android.support.v4.graphics.drawable.DrawableCompat
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.content.ContextCompat
-keepclassmembers class android.support.v4.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class android.support.v4.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class android.support.v4.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class android.support.v4.app.ActivityCompat
-keepclassmembers class android.support.v4.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
}

-keep class android.support.v4.app.TaskStackBuilder$SupportParentable
-keepclassmembers class android.support.v4.app.TaskStackBuilder$SupportParentable {
}

-keep class android.support.v4.app.TaskStackBuilder
-keepclassmembers class android.support.v4.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat$Params
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.Android.Support.CoordinaterLayout
-keep class android.support.design.widget.CoordinatorLayout$Behavior
-keepclassmembers class android.support.design.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class android.support.design.widget.CoordinatorLayout$Behavior
-keepclassmembers class android.support.design.widget.CoordinatorLayout$Behavior {
}

-keep class android.support.design.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class android.support.design.widget.CoordinatorLayout
-keepclassmembers class android.support.design.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.Android.Support.Core.UI
-keep class android.support.v4.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.Android.Support.Core.Utils
# ACW for Xamarin.Android.Support.CursorAdapter
# ACW for Xamarin.Android.Support.CustomTabs
# ACW for Xamarin.Android.Support.CustomView
# ACW for Xamarin.Android.Support.Design
-keep class android.support.design.widget.TabLayout$TabView
-keepclassmembers class android.support.design.widget.TabLayout$TabView {
   *** setSelected(...);
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class android.support.design.widget.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class android.support.design.widget.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.android.support.design.widget.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class android.support.design.widget.TabLayout$Tab
-keepclassmembers class android.support.design.widget.TabLayout$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** isSelected(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.design.widget.TabLayout
-keepclassmembers class android.support.design.widget.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class android.support.design.widget.AppBarLayout$LayoutParams
-keepclassmembers class android.support.design.widget.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
}

-keep class android.support.design.widget.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class android.support.design.widget.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.android.support.design.widget.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class android.support.design.widget.AppBarLayout$ScrollingViewBehavior
-keepclassmembers class android.support.design.widget.AppBarLayout$ScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** onMeasureChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class android.support.design.widget.AppBarLayout
-keepclassmembers class android.support.design.widget.AppBarLayout {
   <init>(...);
   <init>(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addOnOffsetChangedListener(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftable(...);
   *** setLifted(...);
}

-keep class android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemReselectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemReselectedListenerImplementor {
}

-keep class android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class android.support.design.widget.BottomNavigationView
-keepclassmembers class android.support.design.widget.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** inflateMenu(...);
   *** setItemIconSizeRes(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class android.support.design.widget.BottomSheetDialog
-keepclassmembers class android.support.design.widget.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.design.widget.HeaderScrollingViewBehavior
-keepclassmembers class android.support.design.widget.HeaderScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getOverlayTop(...);
   *** setOverlayTop(...);
   *** onMeasureChild(...);
}

-keep class android.support.design.widget.HeaderScrollingViewBehavior
-keepclassmembers class android.support.design.widget.HeaderScrollingViewBehavior {
}

-keep class android.support.design.widget.ViewOffsetBehavior
-keepclassmembers class android.support.design.widget.ViewOffsetBehavior {
   <init>(...);
   <init>(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** layoutChild(...);
   *** onLayoutChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class android.support.design.internal.BottomNavigationItemView
-keepclassmembers class android.support.design.internal.BottomNavigationItemView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemData(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class android.support.design.internal.BottomNavigationMenuView
-keepclassmembers class android.support.design.internal.BottomNavigationMenuView {
   <init>(...);
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getSelectedItemId(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** initialize(...);
   *** onLayout(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class android.support.design.internal.BottomNavigationPresenter
-keepclassmembers class android.support.design.internal.BottomNavigationPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setBottomNavigationMenuView(...);
   *** setCallback(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

# ACW for Xamarin.Android.Support.DocumentFile
# ACW for Xamarin.Android.Support.DrawerLayout
-keep class android.support.v4.widget.DrawerLayout$DrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerListener {
}

-keep class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class android.support.v4.widget.DrawerLayout$LayoutParams
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.DrawerLayout
-keepclassmembers class android.support.v4.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.Android.Support.Fragment
-keep class android.support.v4.app.FragmentActivity
-keepclassmembers class android.support.v4.app.FragmentActivity {
   <init>(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getLifecycle(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** getViewModelStore(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class android.support.v4.app.Fragment$SavedState
-keepclassmembers class android.support.v4.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.app.Fragment
-keepclassmembers class android.support.v4.app.Fragment {
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class android.support.v4.app.FragmentManager$BackStackEntry
-keepclassmembers class android.support.v4.app.FragmentManager$BackStackEntry {
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class android.support.v4.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class android.support.v4.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

# ACW for Xamarin.Android.Support.Interpolator
# ACW for Xamarin.Android.Support.Loader
-keep class android.support.v4.content.Loader$OnLoadCanceledListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCanceledListener {
}

-keep class android.support.v4.content.Loader$OnLoadCompleteListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCompleteListener {
}

-keep class android.support.v4.content.Loader
-keepclassmembers class android.support.v4.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class android.support.v4.app.LoaderManager$LoaderCallbacks
-keepclassmembers class android.support.v4.app.LoaderManager$LoaderCallbacks {
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.Android.Support.LocalBroadcastManager
# ACW for Xamarin.Android.Support.Media.Compat
# ACW for Xamarin.Android.Support.Print
# ACW for Xamarin.Android.Support.SlidingPaneLayout
# ACW for Xamarin.Android.Support.SwipeRefreshLayout
-keep class android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class android.support.v4.widget.SwipeRefreshLayout
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
}

# ACW for Xamarin.Android.Support.Transition
# ACW for Xamarin.Android.Support.v4
# ACW for Xamarin.Android.Support.v7.AppCompat
-keep class android.support.v7.graphics.drawable.DrawableWrapper
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper {
   <init>(...);
   *** getOpacity(...);
   *** getWrappedDrawable(...);
   *** setWrappedDrawable(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class android.support.v7.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class android.support.v7.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class android.support.v7.content.res.AppCompatResources
-keepclassmembers class android.support.v7.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

-keep class android.support.v7.app.AlertDialog$Builder
-keepclassmembers class android.support.v7.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class android.support.v7.app.AlertDialog
-keepclassmembers class android.support.v7.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class android.support.v7.app.ActionBar$LayoutParams
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v7.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class android.support.v7.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.android.support.v7.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v7.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class android.support.v7.app.ActionBar$OnNavigationListener
-keepclassmembers class android.support.v7.app.ActionBar$OnNavigationListener {
}

-keep class android.support.v7.app.ActionBar$Tab
-keepclassmembers class android.support.v7.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.v7.app.ActionBar$Tab
-keepclassmembers class android.support.v7.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.v7.app.ActionBar$TabListener
-keepclassmembers class android.support.v7.app.ActionBar$TabListener {
}

-keep class android.support.v7.app.ActionBar
-keepclassmembers class android.support.v7.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class android.support.v7.app.ActionBar
-keepclassmembers class android.support.v7.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class android.support.v7.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle$Delegate {
}

-keep class android.support.v7.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class android.support.v7.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class android.support.v7.app.AppCompatActivity
-keepclassmembers class android.support.v7.app.AppCompatActivity {
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class android.support.v7.app.AppCompatDelegate
-keepclassmembers class android.support.v7.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class android.support.v7.app.AppCompatDelegate
-keepclassmembers class android.support.v7.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class android.support.v7.app.AppCompatDialog
-keepclassmembers class android.support.v7.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class android.support.v7.app.AppCompatCallback
-keepclassmembers class android.support.v7.app.AppCompatCallback {
}

-keep class android.support.v7.widget.Toolbar$LayoutParams
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v7.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class android.support.v7.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.android.support.v7.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class android.support.v7.widget.Toolbar
-keepclassmembers class android.support.v7.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** onLayout(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class android.support.v7.widget.AppCompatAutoCompleteTextView
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
}

-keep class android.support.v7.widget.AppCompatButton
-keepclassmembers class android.support.v7.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class android.support.v7.widget.AppCompatCheckBox
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class android.support.v7.widget.AppCompatImageButton
-keepclassmembers class android.support.v7.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class android.support.v7.widget.AppCompatImageView
-keepclassmembers class android.support.v7.widget.AppCompatImageView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class android.support.v7.widget.DecorToolbar
-keepclassmembers class android.support.v7.widget.DecorToolbar {
}

-keep class android.support.v7.widget.LinearLayoutCompat
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBaselineAligned(...);
   *** setBaselineAligned(...);
   *** getBaselineAlignedChildIndex(...);
   *** setBaselineAlignedChildIndex(...);
   *** getDividerDrawable(...);
   *** setDividerDrawable(...);
   *** getDividerPadding(...);
   *** setDividerPadding(...);
   *** getDividerWidth(...);
   *** getGravity(...);
   *** setGravity(...);
   *** isMeasureWithLargestChildEnabled(...);
   *** setMeasureWithLargestChildEnabled(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getShowDividers(...);
   *** setShowDividers(...);
   *** getWeightSum(...);
   *** setWeightSum(...);
   *** hasDividerBeforeChildAt(...);
   *** onLayout(...);
   *** setHorizontalGravity(...);
   *** setVerticalGravity(...);
}

-keep class android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class android.support.v7.widget.ScrollingTabContainerView
-keepclassmembers class android.support.v7.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class android.support.v7.widget.SwitchCompat
-keepclassmembers class android.support.v7.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class android.support.v7.view.ActionMode$Callback
-keepclassmembers class android.support.v7.view.ActionMode$Callback {
}

-keep class android.support.v7.view.ActionMode
-keepclassmembers class android.support.v7.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v7.view.ActionMode
-keepclassmembers class android.support.v7.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v7.view.menu.MenuBuilder$Callback
-keepclassmembers class android.support.v7.view.menu.MenuBuilder$Callback {
}

-keep class android.support.v7.view.menu.MenuBuilder
-keepclassmembers class android.support.v7.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class android.support.v7.view.menu.MenuPresenter$Callback
-keepclassmembers class android.support.v7.view.menu.MenuPresenter$Callback {
}

-keep class android.support.v7.view.menu.MenuPresenter
-keepclassmembers class android.support.v7.view.menu.MenuPresenter {
}

-keep class android.support.v7.view.menu.MenuView$ItemView
-keepclassmembers class android.support.v7.view.menu.MenuView$ItemView {
}

-keep class android.support.v7.view.menu.MenuView
-keepclassmembers class android.support.v7.view.menu.MenuView {
}

-keep class android.support.v7.view.menu.MenuItemImpl
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class android.support.v7.view.menu.SubMenuBuilder
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.Android.Support.v7.CardView
-keep class android.support.v7.widget.CardView
-keepclassmembers class android.support.v7.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.Android.Support.v7.RecyclerView
-keep class android.support.v7.widget.GridLayoutManager$LayoutParams
-keepclassmembers class android.support.v7.widget.GridLayoutManager$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
}

-keep class android.support.v7.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanIndexCache(...);
}

-keep class android.support.v7.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class android.support.v7.widget.GridLayoutManager
-keepclassmembers class android.support.v7.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class android.support.v7.widget.LinearLayoutManager
-keepclassmembers class android.support.v7.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class android.support.v7.widget.LinearSmoothScroller
-keepclassmembers class android.support.v7.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class android.support.v7.widget.LinearSnapHelper
-keepclassmembers class android.support.v7.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.OrientationHelper
-keepclassmembers class android.support.v7.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class android.support.v7.widget.OrientationHelper
-keepclassmembers class android.support.v7.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class android.support.v7.widget.PagerSnapHelper
-keepclassmembers class android.support.v7.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.RecyclerView$Adapter
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class android.support.v7.widget.RecyclerView$Adapter
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class android.support.v7.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
}

-keep class android.support.v7.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObserver {
}

-keep class android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class android.support.v7.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class android.support.v7.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemDecoration
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemDecoration
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemDecoration {
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutParams
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$OnFlingListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class android.support.v7.widget.RecyclerView$OnFlingListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class android.support.v7.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$OnScrollListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class android.support.v7.widget.RecyclerView$OnScrollListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnScrollListener {
}

-keep class android.support.v7.widget.RecyclerView$RecycledViewPool
-keepclassmembers class android.support.v7.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class android.support.v7.widget.RecyclerView$Recycler
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class android.support.v7.widget.RecyclerView$RecyclerListener
-keepclassmembers class android.support.v7.widget.RecyclerView$RecyclerListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider {
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class android.support.v7.widget.RecyclerView$State
-keepclassmembers class android.support.v7.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewHolder
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewHolder
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder {
}

-keep class android.support.v7.widget.RecyclerView
-keepclassmembers class android.support.v7.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** swapAdapter(...);
}

-keep class android.support.v7.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class android.support.v7.widget.SnapHelper
-keepclassmembers class android.support.v7.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class android.support.v7.widget.SnapHelper
-keepclassmembers class android.support.v7.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.helper.ItemTouchUIUtil
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtil {
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$Callback
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$Callback
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler {
}

-keep class android.support.v7.widget.helper.ItemTouchHelper
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

# ACW for Xamarin.Android.Support.Vector.Drawable
# ACW for Xamarin.Android.Support.VersionedParcelable
# ACW for Xamarin.Android.Support.ViewPager
-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.view.ViewPager$OnAdapterChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnAdapterChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$OnPageChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnPageChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$PageTransformer
-keepclassmembers class android.support.v4.view.ViewPager$PageTransformer {
}

-keep class android.support.v4.view.ViewPager
-keepclassmembers class android.support.v4.view.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.Essentials
# ACW for Xamarin.Forms.Platform.Android
# ACW for Xamarin.Forms.Platform
